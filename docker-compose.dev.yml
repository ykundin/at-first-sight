version: "3.3"
services:
  reverse-proxy:
    image: traefik:v2.10
    ports:
      - 80:80
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./reverse-proxy/traefik.dev.yml:/traefik.yml:ro
    labels:
      - traefik.enable=true
      - traefik.http.routers.traefik.entrypoints=web
      - traefik.http.routers.traefik.rule=Host(`traefik.at-first-sight.localhost`)
      - traefik.http.routers.traefik.service=api@internal

  db:
    image: mongo:5.0.2
    restart: always
    env_file:
      - .env
    ports:
      - 27017:27017
    volumes:
      - db_data:/data/db
      - ./mongo/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d:ro

  object-storage:
    image: bitnami/minio:latest
    restart: always
    environment:
      - MINIO_ROOT_USER=kundin
      - MINIO_ROOT_PASSWORD=very-secret-password
      - MINIO_SKIP_CLIENT=yes
    volumes:
      - minio_storage:/data
    labels:
      - traefik.enable=true
      - traefik.http.routers.s3.entrypoints=web
      - traefik.http.routers.s3.rule=Host(`s3.at-first-sight.localhost`)
      - traefik.http.routers.s3.service=object-storage
      - traefik.http.services.object-storage.loadbalancer.server.port=9001

  imgproxy:
    image: darthsim/imgproxy
    env_file:
      - .env
    environment:
      - IMGPROXY_USE_S3=true
      - IMGPROXY_S3_ENDPOINT=http://object-storage:9000
    labels:
      - traefik.enable=true
      - traefik.http.routers.imgproxy.entrypoints=web
      - traefik.http.routers.imgproxy.rule=Host(`at-first-sight.localhost`) && PathPrefix(`/image`)
      - traefik.http.middlewares.remove-image.stripprefix.prefixes=/image
      - traefik.http.middlewares.add-bucket.addprefix.prefix=/insecure/plain/s3://at-first-sight
      - traefik.http.routers.imgproxy.middlewares=remove-image,add-bucket
      - traefik.http.services.imgproxy.loadbalancer.server.port=8080

  backend:
    image: node:18-alpine3.18
    restart: always
    working_dir: /app
    volumes:
      - ./backend:/app
      - ./backend/tmp:/app/tmp
    env_file:
      - .env
    environment:
      - PORT=4000
      - AWS_ENDPOINT=http://object-storage:9000
    command: npm run dev
    labels:
      - traefik.enable=true
      - traefik.http.routers.backend.entrypoints=web
      - traefik.http.routers.backend.rule=Host(`at-first-sight.localhost`) && PathPrefix(`/api`, `/webhook`)
      - traefik.http.routers.backend.service=backend
      - traefik.http.services.backend.loadbalancer.server.port=4000

  tg-web-app:
    image: oven/bun:1.0.4-alpine
    restart: always
    working_dir: /app
    volumes:
      - ./tg-web-app:/app
    env_file:
      - .env
    environment:
      - PORT=3000
      - IMGPROXY_URL=http://imgproxy:8080
      - AWS_BUCKET=at-first-sight
    command: bun run dev
    labels:
      - traefik.enable=true
      - traefik.http.routers.tg-web-app.entrypoints=web
      - traefik.http.routers.tg-web-app.rule=Host(`at-first-sight.localhost`)
      - traefik.http.routers.tg-web-app.service=tg-web-app
      - traefik.http.services.tg-web-app.loadbalancer.server.port=3000

volumes:
  db_data:
  minio_storage:
